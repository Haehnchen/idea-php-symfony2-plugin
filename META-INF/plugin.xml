<idea-plugin version="2" url="https://github.com/adrienbrault/idea-php-symfony2-plugin">
    <id>fr.adrienbrault.idea.symfony2plugin</id>
    <name>Symfony2 Plugin</name>
    <version>0.5.3</version>
    <vendor email="adrien.brault@gmail.com" url="http://adrienbrault.fr">Adrien Brault</vendor>

    <description><![CDATA[
<h1>Symfony2 plugin.</h1>

<h2>Features:</h2>
<ul>
    <li>Autocomplete service id in ContainerInterface::get() calls</li>
    <li>Clickable service id in ContainerInterface::get() first argument</li>
    <li>Detect ContainerInterface::get() result type and thus provide autocomplete</li>
    <li>Autocomplete template name in render() calls</li>
    <li>Clickable template name in render() calls</li>
    <li>Autocomplete template name in twig templates</li>
    <li>Clickable template name in twig templates</li>
</ul>
      ]]></description>

    <change-notes><![CDATA[
<h2>0.5.3</h2>
<ul>
    <li>Fix a bug on windows when using an absolute path for the container.xml</li>
</ul>

<h2>0.5.2</h2>
<ul>
    <li>The plugin settings for the container.xml path, has now a file chooser, and allow paths outside the project</li>
</ul>

<h2>0.5.1</h2>
<ul>
    <li>Support {% embed autocomplete in twig</li>
</ul>

<h2>0.5.0</h2>
<ul>
    <li>Use a symfony2 icon instead of class icon in services autocomplete :)</li>
    <li>You can now click on templates name in twig to go to file (awesome!)</li>
    <li>"{{ include(" now autocomplete the template name</li>
</ul>

<h2>0.4.0</h2>
<ul>
    <li>Autocomplete template name in render() calls</li>
    <li>Clickable template name in render() calls</li>
    <li>Autocomplete template name in twig templates</li>
</ul>

<h2>0.3.3</h2>
<ul>
    <li>Better description, and integrate the changelog into the plugin</li>
</ul>

<h2>0.3.2</h2>
<ul>
    <li>Services id completion popup also show the class on the right</li>
</ul>

<h2>0.3.1</h2>
<ul>
    <li>Fix small cache issue</li>
</ul>

<h2>0.3.0</h2>
<ul>
    <li>Services id are now clickable (go to class definition), and autocompletable (CTRL+SPACE).</li>
    <li>Should support all ContainerInterface::get proxies as long as the id is the first argument (Previously, only direct calls to ContainerInterface::get or Controller::get)</li>
</ul>

<h2>0.2.1</h2>
<ul>
    <li>Fixed required idea build</li>
</ul>

<h2>0.2.0</h2>
<ul>
    <li>The `appDevDebugProjectContainer.xml` path can now be configured in the project settings.</li>
</ul>

<h2>0.1.0</h2>
<ul>
    <li>Detect ContainerInterface::get result type</li>
</ul>
]]>
    </change-notes>

    <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Build+Number+Ranges for description -->
    <idea-version since-build="129.196"/>

    <extensions defaultExtensionNs="com.intellij">
        <php.typeProvider implementation="fr.adrienbrault.idea.symfony2plugin.dic.SymfonyContainerTypeProvider"/>
        <psi.referenceContributor implementation="fr.adrienbrault.idea.symfony2plugin.dic.ServiceReferenceContributor"/>
        <psi.referenceContributor implementation="fr.adrienbrault.idea.symfony2plugin.templating.PhpTemplateReferenceContributor"/>
        <psi.referenceContributor implementation="fr.adrienbrault.idea.symfony2plugin.doctrine.DoctrineEntityReferenceContributor"/>
        <!--<psi.referenceContributor implementation="fr.adrienbrault.idea.symfony2plugin.templating.TwigTemplateReferenceContributor"/>-->
        <completion.contributor language="Twig" implementationClass="fr.adrienbrault.idea.symfony2plugin.templating.TwigCompletionContributor"/>
        <projectConfigurable instance="fr.adrienbrault.idea.symfony2plugin.SettingsForm"/>
        <projectService serviceImplementation="fr.adrienbrault.idea.symfony2plugin.Settings"/>
        <gotoDeclarationHandler implementation="fr.adrienbrault.idea.symfony2plugin.templating.TwigTemplateGoToDeclarationHandler"/>
    </extensions>

    <depends>com.jetbrains.php</depends>
    <depends>com.intellij.modules.platform</depends>
    <project-components>
        <component>
            <implementation-class>fr.adrienbrault.idea.symfony2plugin.Symfony2ProjectComponent</implementation-class>
        </component>
    </project-components>
</idea-plugin>
